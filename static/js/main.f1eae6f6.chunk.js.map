{"version":3,"sources":["ToDoList.js","ToDoItem.js","App.js","reducers/reducer.js","index.js"],"names":["index","ToDoList","handleSubmit","e","preventDefault","text","_this","getTask","value","data","completed","key","props","dispatch","type","this","inputElement","current","focus","_this2","react_default","a","createElement","className","onSubmit","placeholder","ref","input","Component","connect","fontawesome","library","add","faCheck","faTimes","ToDoItem","filterItems","items","filter","t","createTasks","item","onClick","react_fontawesome_index_es","icon","todoEntries","entries","listItems","map","state","App","src_ToDoList_0","router_es","src_ToDoItem_0","path","to","reducer","arguments","length","undefined","action","concat","Object","objectSpread","store","createStore","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f1eae6f6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './ToDoList.css';\r\n\r\n\r\nlet index=0;\r\nclass ToDoList extends Component {\r\n\r\n  componentDidUpdate() {\r\n    this.props.inputElement.current.focus();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"todoListMain\">\r\n        <div className=\"header\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <input\r\n              placeholder=\"Task\"\r\n              ref={(input) => this.getTask = input}\r\n            />\r\n            <button type=\"submit\"> Add Task </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const text = this.getTask.value;\r\n    const data = {\r\n      completed: false,\r\n      key: index++,\r\n      text,\r\n    }\r\n    this.props.dispatch({\r\n      type: 'ADD_TASK',\r\n      data\r\n    });\r\n    \r\n    this.getTask.value = '';\r\n  }\r\n}\r\nexport default connect()(ToDoList)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport fontawesome from '@fortawesome/fontawesome'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport './ToDoItem.css';\r\n\r\nfontawesome.library.add(faCheck, faTimes);\r\n\r\nclass ToDoItem extends Component {\r\n    filterItems = (items, filter) => {\r\n        switch (filter) {\r\n            case 'SHOW_COMPLETED':\r\n                return items.filter(t => t.completed);\r\n            case 'SHOW_PENDING':\r\n                return items.filter(t => !t.completed);\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n    createTasks = (item) => {\r\n        return (\r\n            <li\r\n                className={\r\n                    item.completed ? 'complete' : 'pending'\r\n                }\r\n                key={item.key} onClick={() => {\r\n                    this.props.dispatch({\r\n                        type: 'TOGGLE_COMPLETED',\r\n                        key: item.key\r\n                    })\r\n                }}>\r\n                {item.text}&nbsp;&nbsp;\r\n                <FontAwesomeIcon icon={item.completed ? \"check\" : \"times\"} />\r\n            </li>\r\n        )\r\n    }\r\n    render() {\r\n        let todoEntries = this.props.entries;\r\n        todoEntries = this.filterItems(todoEntries, this.props.filter);\r\n        const listItems = todoEntries.map(this.createTasks)\r\n\r\n        return <ul className=\"theList\">{listItems}</ul>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        entries: state\r\n    }\r\n}\r\nexport default connect(mapStateToProps\r\n)(ToDoItem);\r\n","import React, { Component } from 'react';\nimport ToDoList from './ToDoList';\nimport ToDoListItem from './ToDoItem';\nimport { Router, Link } from \"@reach/router\"\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>To Do List</h1>\n        <ToDoList />\n        <Router>\n          <ToDoListItem filter=\"SHOW_ALL\" path=\"/\" />\n          <ToDoListItem filter=\"SHOW_PENDING\" path=\"pending\" />\n          <ToDoListItem filter=\"SHOW_COMPLETED\" path=\"completed\" />\n        </Router>\n        <nav>\n          <Link to=\"/\">All Tasks</Link> |{\" \"}\n          <Link to=\"pending\">Pending Tasks</Link> |{\" \"}\n          <Link to=\"completed\">Completed Tasks</Link>\n        </nav>\n\n      </div>\n    );\n  }\n}\nexport default App;","const reducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TASK':\r\n            return state.concat([action.data]);\r\n        case 'TOGGLE_COMPLETED':\r\n            return state.map((entries) => {\r\n                if (entries.key === action.key) {\r\n                    return {\r\n                        ...entries,\r\n                        completed: !entries.completed\r\n                    }\r\n                } else return entries;\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport reducer from './reducers/reducer';\nimport { Provider } from 'react-redux';\n\n\n\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));"],"sourceRoot":""}